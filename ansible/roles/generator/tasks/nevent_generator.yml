- stat: path=/usr/lib64/libsodium.so
  register: st
  
- name: Install libsodium
  become: yes
  become_method: sudo
  yum: name=libsodium.x86_64 state=present
  when: not st.stat.exists
  
- name: Create link
  become: yes
  become_method: sudo
  file: src=/usr/lib64/libsodium.so.13 dest=/usr/lib64/libsodium.so state=link
  when: not st.stat.exists
  
- stat: path="{{ generator_home }}"
  register: generator_dir

- name: Create generator_home folder
  become: yes
  become_method: sudo
  file: path="{{ generator_home }}" state=directory
  when: not generator_dir.stat.exists

- stat: path="{{ generator_home }}/sample"
  register: st

- name: Create generator_home/sample folder
  become: yes
  become_method: sudo
  file: path="{{ generator_home }}/sample" state=directory
  when: not st.stat.exists

- name: Clone generator from repository
  git: repo="{{ generator_src }}" dest=/tmp/neventGenerator force=yes accept_hostkey=yes

- name: Create build folder
  file: path=/tmp/neventGenerator/neventGenerator/build state=directory
  
- name: Compile generator
  shell: cmake -DRDKAFKA_DIR=/usr/local -DNEXUS_DIR=/usr -DFLATBUFFERS_DIR=/usr/local/lib64 ../ && make chdir=/tmp/neventGenerator/neventGenerator/build
  
- name: Copy cJSON library to /usr/local/lib
  become: yes
  become_method: sudo
  copy: src=/tmp/neventGenerator/neventGenerator/cJSON/libcjson.so dest=/usr/local/lib remote_src=true

- name: Copy files to execution folder
  become: yes
  become_method: sudo
  copy: src="/tmp/neventGenerator/neventGenerator/{{ item }}" dest="{{ generator_home }}/{{ item }}" remote_src=yes
  with_items:
    - AMORgenerator
    - control.in
    - el737counter.py
    - header.amor
    - sample/amor2015n001774.hdf

- name: Make generator executable
  become: yes
  become_method: sudo
  file: path="{{ generator_home }}/AMORgenerator" mode="a+x"
  
