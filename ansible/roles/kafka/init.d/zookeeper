#! /bin/sh

## BEGIN INIT INFO
# chkconfig: - 85 15
# pidfile: /var/run/zookeperd/zookeperd.pid
# Provides:		zookeper
# Required-Start:	$remote_fs $syslog
# Required-Stop:	$remote_fs $syslog
# Default-Start:	2 3 4 5
# Default-Stop:		
# Short-Description:	Zookeper daemon
# processname: zookeperd
## END INIT INFO

set -e

# /etc/init.d/zookeeper: start and stop the Zookeeper daemon

. /etc/init.d/functions

PROCESS="$(pgrep -x zookeperd)"

# Are we running from init?
run_by_init() {
    ([ "$previous" ] && [ "$runlevel" ]) || [ "$runlevel" = S ]
}

do_start() {
    if [ "$PROCESS" = "" ] ; then
        echo -n $"starting Zookeper from path "$KAFKA_HOME
        $KAFKA_HOME/zookeeper/bin/zookeeper-server-start.sh -daemon $KAFKA_HOME/config/zookeeper.properties
    else
        echo -n $"zookeper already running."
    fi
    echo " "
}

do_stop() {
    if [ "$PROCESS" != "" ] ; then
   	echo -n $"Stopping zookeper.";
#	log_daemon_msg "Stopping Kafka" "kafka" || true
        ps ax | grep -i 'zookeper\.Zookeper' | grep java | grep -v grep |  awk '{print $1}' | xargs kill -SIGKILL
#	log_end_msg 0 || true
    else
        echo -n $"zookeper is not running."
    fi
    echo " "
}


do_status()
{
#    status_of_proc -p /var/run/kafka.pid && exit 0 || exit $?
    if [ "$PROCESS" = "" ] ; then
        echo -n $"zookeeper not running."
    else
        echo -n $"zookeeper is currently running. PID:"
        echo -n $"$PROCESS "
    fi
    echo " "
}

do_wait()
{
   while [ "$PROCESS" != "" ]
   do
       sleep 0.1
   PROCESS="$(pgrep -x zookeeperd)"
   done  
}


case "$1" in
   start)
	echo $PROCESS
     do_start
     ;;
   stop)
     do_stop
     ;;
   status)
     do_status
     ;;
   restart)
     do_stop
     do_wait
     do_start
     ;;
  *)
#     log_action_msg "Usage: /etc/init.d/ssh {start|stop|status}" || true
     echo -n $"Usage: /etc/init.d/ssh {start|stop|status}" || true
     echo ""
     exit 1
esac
